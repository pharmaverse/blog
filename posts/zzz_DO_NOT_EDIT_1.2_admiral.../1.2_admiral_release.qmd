---
title: "1.2 admiral release"
author:
  - name: Ben Straub, Edoardo Mancini
description: "A short sneak peak of what to expect from the upcoming 1.2 release of {admiral}."
# Note that the date below will be auto-updated when the post is merged.
date: "2024-12-01"
# Please do not use any non-default categories.
# You can find the default categories in the repository README.md
categories: [ADaM, Community, Technical]
# Feel free to change the image
image: "admiral.png"
---

<!--------------- typical setup ----------------->

```{r setup, include=FALSE}
long_slug <- "zzz_DO_NOT_EDIT_1.2_admiral..."
 
# Please use the {link} package to automatically link packages and functions.
# To link to a package simply wrap it in curly braces: {dplyr}.
# Link a function from a package like: dplyr::filter().
# For more information check out {link}.
library(link)
link::auto()
```

<!--------------- post begins here ----------------->

# Introduction

As crazy as it may sound, the {admiral} package is nearing its third CRAN birthday: our first release dates all the way back to the 17th February 2022! Time really does fly when you're programming ADaMs, and our codebase has grown *massively* since then. For some context, if you'd only allowed yourself to write twenty lines of code a day, starting from the 17th February 2022, by now you would have compiled the whole of the {admiral} codebase (excluding documentation and unit tests - who needs those anyway?). And so, what better early birthday present for {admiral} than the new and exciting 1.2 release? Read through this blog post to find out more about the exciting contents of this release, as well some of our plans for 2025.

# New Features for {admiral} 1.2

As always, we have listed the full set of 1.2 updates in our [changelog](https://pharmaverse.github.io/admiral/news/index.html), and have picked out only a select few to discuss within this post.

## New function: admiral::derive_vars_cat()

* Ben

## New function: admiral::derive_vars_crit_flag()

* Ben

## New function: admiral::transform_scale()

The final new function we are adding is `admiral::transform_scale()`. Coming directly from a user request, with this function we now have functionality to linearly transform a vector of values with a certain associated range into values from another range.

```{r, eval = T}
library(admiral)

transform_range(
  source = c(1, 4, 3, 6, 5),
  source_range = c(1, 5),
  target_range = c(0, 100)
)

```

Within ADaM programming, this is a common task, arising for instance when transforming questionnaire values into a standardized scale (e.g. 1-100). As such, we see this function being employed principally within calls to `admiral::derive_param_computed()` during the creation of datasets such as ADQS. You can read more about this topic within our [Questionnaire ADaMs vignette](https://pharmaverse.github.io/admiral/articles/questionnaires.html#transformed-items).

### Deprecation Strategy

* Ben to write this one

### Recent Conferences

Edo

### Reminders on admiraldiscovery, cheatsheet, Find My Function, Working Groups

* Edoardo 
* IG Review, Error Messaging Group, Environments WG, Lab Working Group
* Always for new WG ideas!

### What's we might be doing...for admiral 1.2 to 2.0 (title tbd)

* User input
* Remove `exprs()` 
* Speed up admiral for larger datasets
* json metadata for lab grading and questionnaires
* 


<!--------------- appendices go here ----------------->

```{r, echo=FALSE}
source("appendix.R")
insert_appendix(
  repo_spec = "pharmaverse/blog",
  name = long_slug,
  # file_name should be the name of your file
  file_name = list.files() %>% stringr::str_subset(".qmd") %>% first()
)
```
